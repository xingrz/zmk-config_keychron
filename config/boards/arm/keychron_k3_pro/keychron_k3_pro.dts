/*
 * Copyright (c) 2023 XiNGRZ
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <freq.h>
#include <mem.h>
#include <st/l4/stm32l432.dtsi>
#include <st/l4/stm32l432k(b-c)ux-pinctrl.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/ckled2001.h>

/ {
	model = "Keychron K3 Pro";
	compatible = "keychron,k3_pro";

	chosen {
		zephyr,code-partition = &code_partition;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,console = &cdc_acm_uart;
		zmk,kscan = &kscan;
		zmk,matrix_transform = &default_transform;
		zmk,underglow = &led_strip;
	};

	kscan_key: kscan-matrix {
		compatible = "zmk,kscan-gpio-matrix";

		diode-direction = "col2row";
		col-gpios = <&gpioc 15 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  0 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  1 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  2 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  3 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  4 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  5 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  6 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  7 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  8 (GPIO_ACTIVE_LOW)>,
		            <&gpiox  9 (GPIO_ACTIVE_LOW)>,
		            <&gpiox 10 (GPIO_ACTIVE_LOW)>,
		            <&gpiox 11 (GPIO_ACTIVE_LOW)>,
		            <&gpiox 12 (GPIO_ACTIVE_LOW)>,
		            <&gpiox 13 (GPIO_ACTIVE_LOW)>,
		            <&gpiox 14 (GPIO_ACTIVE_LOW)>;
		row-gpios = <&gpiob  5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		            <&gpiob  4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		            <&gpiob  3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		            <&gpioa 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		            <&gpioa 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,
		            <&gpioa 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};

	kscan_sel: kscan-direct {
		compatible = "zmk,kscan-gpio-direct";

		input-gpios = <&gpioa  8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,  /* MAC_SEL */
		              <&gpioa 10 (GPIO_ACTIVE_LOW)>,                  /* BT_SEL */
		              <&gpioh  3 (GPIO_ACTIVE_HIGH)>;                 /* RESET */

		debounce-scan-period-ms = <10>;
		poll-period-ms = <10>;
	};

	kscan: kscan-composite {
		compatible = "zmk,kscan-composite";

		rows = <7>;
		columns = <16>;

		kscan-key {
			kscan = <&kscan_key>;
		};

		kscan-sel {
			kscan = <&kscan_sel>;
			row-offset = <6>;
		};
	};

	default_transform: keymap_transform {
		compatible = "zmk,matrix-transform";
		columns = <16>;
		rows = <7>;
		map = <
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15)
			RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)          RC(1,15)
			RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)          RC(2,15)
			RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)          RC(3,13)          RC(3,15)
			RC(4,0)         RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)          RC(4,13) RC(4,14) RC(4,15)
			RC(5,0) RC(5,1) RC(5,2)                         RC(5,6)                         RC(5,10) RC(5,11) RC(5,12) RC(5,13) RC(5,14) RC(5,15)
			RC(6,0) RC(6,1) RC(6,2)
		>;
	};

	led_strip: led-strip-composite {
		compatible = "zmk,led-strip-composite";

		chain-length = <84>;

		strip-0 {
			led-strip = <&led_strip_0>;
		};

		strip-1 {
			led-strip = <&led_strip_1>;
		};
	};
};

&clk_hsi {
	status = "okay";
};

&pll {
	div-m = <1>;
	mul-n = <10>;
	div-p = <7>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_hsi>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(80)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&sram0 {
	reg = <0x20000000 DT_SIZE_K(48)>;
};

&flash0 {
	reg = <0x8000000 DT_SIZE_K(128)>;

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		code_partition: partition@0 {
			label = "code_partition";
			reg = <0x00000000 DT_SIZE_K(124)>;
		};

		storage_partition: partition@1f000 {
			label = "storage";
			reg = <0x0001f000 DT_SIZE_K(4)>;
		};
	};
};

&usb {
	pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";

	cdc_acm_uart: cdc-acm-uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

&spi1 {
	pinctrl-0 = <&spi1_sck_pa1 &spi1_mosi_pa7>;
	pinctrl-names = "default";
	status = "okay";

	cs-gpios = <&gpiob 0 GPIO_ACTIVE_LOW>;

	gpiox: sn74hc595@0 {
		compatible = "zmk,gpio-595";

		reg = <0>;
		spi-max-frequency = <DT_FREQ_K(500)>;

		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <16>;
	};
};

&i2c1 {
	pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
	pinctrl-names = "default";
	status = "okay";

	clock-frequency = <DT_FREQ_K(400)>;

	led_strip_0: ckled2001@77 {
		compatible = "keychron,ckled2001";

		reg = <0x77>;
		chain-length = <46>;
		#led-strip-cells = <0>;

		init-delay-us = <1000>;

		map = <
			/* ROW 0 */
			/* R        G        B */
			CK(8, 0) CK(6, 0) CK(7, 0)
			CK(8, 1) CK(6, 1) CK(7, 1)
			CK(8, 2) CK(6, 2) CK(7, 2)
			CK(8, 3) CK(6, 3) CK(7, 3)
			CK(8, 4) CK(6, 4) CK(7, 4)
			CK(8, 5) CK(6, 5) CK(7, 5)
			CK(8, 6) CK(6, 6) CK(7, 6)
			CK(8, 7) CK(6, 7) CK(7, 7)
			CK(8, 8) CK(6, 8) CK(7, 8)
			CK(8, 9) CK(6, 9) CK(7, 9)
			CK(8,10) CK(6,10) CK(7,10)
			CK(8,11) CK(6,11) CK(7,11)
			CK(8,12) CK(6,12) CK(7,12)
			CK(8,13) CK(6,13) CK(7,13)
			CK(8,14) CK(6,14) CK(7,14)
			CK(8,15) CK(6,15) CK(7,15)
			/* ROW 1 */
			/* R        G        B */
			CK(5, 0) CK(3, 0) CK(4, 0)
			CK(5, 1) CK(3, 1) CK(4, 1)
			CK(5, 2) CK(3, 2) CK(4, 2)
			CK(5, 3) CK(3, 3) CK(4, 3)
			CK(5, 4) CK(3, 4) CK(4, 4)
			CK(5, 5) CK(3, 5) CK(4, 5)
			CK(5, 6) CK(3, 6) CK(4, 6)
			CK(5, 7) CK(3, 7) CK(4, 7)
			CK(5, 8) CK(3, 8) CK(4, 8)
			CK(5, 9) CK(3, 9) CK(4, 9)
			CK(5,10) CK(3,10) CK(4,10)
			CK(5,11) CK(3,11) CK(4,11)
			CK(5,12) CK(3,12) CK(4,12)
			CK(5,13) CK(3,13) CK(4,13)
			CK(5,15) CK(3,15) CK(4,15)
			/* ROW 2 */
			/* R        G        B */
			CK(0, 0) CK(2, 0) CK(1, 0)
			CK(0, 1) CK(2, 1) CK(1, 1)
			CK(0, 2) CK(2, 2) CK(1, 2)
			CK(0, 3) CK(2, 3) CK(1, 3)
			CK(0, 4) CK(2, 4) CK(1, 4)
			CK(0, 5) CK(2, 5) CK(1, 5)
			CK(0, 6) CK(2, 6) CK(1, 6)
			CK(0, 7) CK(2, 7) CK(1, 7)
			CK(0, 8) CK(2, 8) CK(1, 8)
			CK(0, 9) CK(2, 9) CK(1, 9)
			CK(0,10) CK(2,10) CK(1,10)
			CK(0,11) CK(2,11) CK(1,11)
			CK(0,12) CK(2,12) CK(1,12)
			CK(0,13) CK(2,13) CK(1,13)
			CK(0,15) CK(2,15) CK(1,15)
		>;
	};

	led_strip_1: ckled2001@74 {
		compatible = "keychron,ckled2001";

		reg = <0x74>;
		chain-length = <38>;
		#led-strip-cells = <0>;

		init-delay-us = <1000>;

		map = <
			/* ROW 3 */
			/* R        G        B */
			CK(8, 0) CK(6, 0) CK(7, 0)
			CK(8, 1) CK(6, 1) CK(7, 1)
			CK(8, 2) CK(6, 2) CK(7, 2)
			CK(8, 3) CK(6, 3) CK(7, 3)
			CK(8, 4) CK(6, 4) CK(7, 4)
			CK(8, 5) CK(6, 5) CK(7, 5)
			CK(8, 6) CK(6, 6) CK(7, 6)
			CK(8, 7) CK(6, 7) CK(7, 7)
			CK(8, 8) CK(6, 8) CK(7, 8)
			CK(8, 9) CK(6, 9) CK(7, 9)
			CK(8,10) CK(6,10) CK(7,10)
			CK(8,11) CK(6,11) CK(7,11)
			CK(8,13) CK(6,13) CK(7,13)
			CK(8,15) CK(6,15) CK(7,15)
			/* ROW 4 */
			/* R        G        B */
			CK(2, 0) CK(0, 0) CK(1, 0)
			CK(2, 2) CK(0, 2) CK(1, 2)
			CK(2, 3) CK(0, 3) CK(1, 3)
			CK(2, 4) CK(0, 4) CK(1, 4)
			CK(2, 5) CK(0, 5) CK(1, 5)
			CK(2, 6) CK(0, 6) CK(1, 6)
			CK(2, 7) CK(0, 7) CK(1, 7)
			CK(2, 8) CK(0, 8) CK(1, 8)
			CK(2, 9) CK(0, 9) CK(1, 9)
			CK(2,10) CK(0,10) CK(1,10)
			CK(2,11) CK(0,11) CK(1,11)
			CK(2,13) CK(0,13) CK(1,13)
			CK(2,14) CK(0,14) CK(1,14)
			CK(2,15) CK(0,15) CK(1,15)
			/* ROW 5 */
			/* R        G        B */
			CK(5, 0) CK(3, 0) CK(4, 0)
			CK(5, 1) CK(3, 1) CK(4, 1)
			CK(5, 2) CK(3, 2) CK(4, 2)
			CK(5, 6) CK(3, 6) CK(4, 6)
			CK(5,10) CK(3,10) CK(4,10)
			CK(5,11) CK(3,11) CK(4,11)
			CK(5,12) CK(3,12) CK(4,12)
			CK(5,13) CK(3,13) CK(4,13)
			CK(5,14) CK(3,14) CK(4,14)
			CK(5,15) CK(3,15) CK(4,15)
		>;
	};
};
